import java.util.Scanner;

public class AsciiShop{
	public static void main(String[] args){
		
		Scanner sc = new Scanner(System.in);
		
		int height = 0, width = 0;
		//AsciiImage image;
		boolean input_error = false;
		boolean op_error = false;
		String eof = "", temp = "";
		
		/*
		*Überprüft ob das erste Wort "create" ist und ob danach ein Zahlenwert folgt, sonst wird ein Fehler ausgegeben.
		*/
		if(!sc.next().equals("create") && !sc.hasNextInt()){		
			input_error = true;
		}
		
		width = sc.nextInt();
		height = sc.nextInt();
		/*
		*Überprüft ob Höhe und Breite größer Null sind, ansonsten wird "INPUT MISMATCH" ausgegeben.
		*/
		if(width<=0 || height<=0){					
			input_error = true;
		}
		
		if(input_error == false){
		AsciiImage image = new AsciiImage(width, height);
		}
		
		String command = "";
		/*
		*Die Schleife wird solange durchlaufen, solange kein Fehler auftritt und eine Eingabe vorhanden ist.
		*Das Bild wird bis "eof" eingelesen und die Bildpunkte entsprechen ihren Koordinaten gespeichert. 
		*Folgt nach der angegebenen Höhe nicht "eof" wird ein Fehler ausgegeben. 
		*Es wird auch ein Fehler ausgegeben, wenn die Breite einer Zeile sich von der angegebenen unterscheidet.
		*Die Eingabe wird height-mal durchlaufen.
		*/
		while(sc.hasNext() && input_error == false && op_error == false){
			command = sc.next();
			
			if(command.equals("load")){
				eof = sc.next();
				for(int h=0;h<image.getHeight();h++){
					temp = sc.next();
					if(temp.length() != width){
						input_error = true;
						break;
					}
					for(int g=0;g<temp.length();g++){
						image.setPixel(g,h,temp.charAt(g));
					}
				}
				if(!sc.next().equals(eof)){
					input_error = true;
					break;
				}
			}
		/*	if(command.equals("uniqueChars")){
				
				System.out.println(image.getUniqueChars());	
			}
			if(command.equals("flip-v")){
				
				image.flipV();
			}*/
			else if(command.equals("transpose")){
				
				image.transpose();
			}
			/*
			*Sind die Koordinaten, an denen der fill-Algorithmus beginnen soll, außerhalb des Bildbereiches wird "OPERATION FAILD" ausgegeben.
			*/
			else if(command.equals("fill")){
				
				int x = sc.nextInt();
				int y = sc.nextInt();
				String a = sc.next();
				char c = a.charAt(0);
				
				if(x<image.getWidth() && y<image.getHeight()){
					image.fill(x, y, c);
				} else {
					op_error = true;
				}
			}
			else if(command.equals("clear")){
				image.clear();
			}
			else if(command.equals("line")){
				int x0=sc.nextInt();
				int y0=sc.nextInt();
				int x1=sc.nextInt();
				int y1=sc.nextInt();
				String ch = sc.next();
				char c = ch.charAt(0);
				
				image.drawLine(x0,y0,x1,y1,c);
			}
			else if(command.equals("replace")){
				char c1 = ' ', c2 = ' ';
				temp = sc.next();
				c1 = temp.charAt(0);
				temp = sc.next();
				c2 = temp.charAt(0);
				
				image.replace(c1, c2);
			}
			else if(command.equals("print")){
				System.out.println(image.toString());
				//System.out.println(image.getWidth() + " " + image.getHeight());
			
			} else {
				System.out.println("UNKNOWN COMMAND");
				break;
			}
			/*if(command.equals("symmetric-h")){
				
				if(image.symmetric() == true){
					System.out.println("true");
				} else {
					System.out.println("false");
				}
				
			}
			*/
		}
		/*
		*Werden die bool'schen error variablen "true", wird der entsprechende Fehler ausgegeben.
		*/
		if(input_error == true){
			System.out.println("INPUT MISMATCH");
			
		} else if(op_error == true){
			System.out.println("OPERATION FAILED");
		}
	}
	
}
